// Generated by CoffeeScript 1.10.0
(function() {
  var EmailChannel, NotificatorChannel, nodemailer, validator,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  nodemailer = require('nodemailer');

  validator = require('validator');

  NotificatorChannel = require('../NotificatorChannel');

  EmailChannel = (function(superClass) {
    extend(EmailChannel, superClass);

    function EmailChannel(options) {
      EmailChannel.__super__.constructor.call(this, options);
    }

    EmailChannel.prototype.getTransport = function() {
      if (!this.transport) {
        this.transport = nodemailer.createTransport(this.options);
      }
      return this.transport;
    };

    EmailChannel.prototype.sendMessage = function(message, destination, callback) {
      var messageOptions;
      messageOptions = {
        from: message.from || this.options.from || 'sender not specified',
        to: destination,
        subject: message.subject || 'subject not specified',
        text: message.text || 'text not specified',
        html: message.html || 'html not specified'
      };
      return this.getTransport().sendMail(messageOptions, callback);
    };

    EmailChannel.prototype.validateDestination = function(destination) {
      if (!validator.isEmail(destination)) {
        throw new Error(destination + ' is not valid email');
      }
      return true;
    };

    return EmailChannel;

  })(NotificatorChannel);

  module.exports = EmailChannel;

}).call(this);
